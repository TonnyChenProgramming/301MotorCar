ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"MOVEMENT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.motor_left,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	motor_left, %function
  24              	motor_left:
  25              	.LFB64:
  26              		.file 1 "MOVEMENT.c"
   1:MOVEMENT.c    **** #include "project.h"
   2:MOVEMENT.c    **** #include "MOVEMENT.h"
   3:MOVEMENT.c    **** #include "SENSORS_READ.h"
   4:MOVEMENT.c    **** #include "main.h"
   5:MOVEMENT.c    **** #include "SENSORS_READ.h"
   6:MOVEMENT.c    **** 
   7:MOVEMENT.c    **** extern MovementState previous_movement;
   8:MOVEMENT.c    **** 
   9:MOVEMENT.c    **** // PWM values
  10:MOVEMENT.c    **** #define PWM_FWD  168   // minimum forward torque
  11:MOVEMENT.c    **** #define PWM_BWD   86   // backward value
  12:MOVEMENT.c    **** #define PWM_STOP   127
  13:MOVEMENT.c    **** 
  14:MOVEMENT.c    **** // Motor control helpers
  15:MOVEMENT.c    **** static void motor_left(uint16 val)  { PWM_1_WriteCompare(val); }
  27              		.loc 1 15 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  41              		.loc 1 15 0
  42 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 2


  43 000c DBB2     		uxtb	r3, r3
  44 000e 1846     		mov	r0, r3
  45 0010 FFF7FEFF 		bl	PWM_1_WriteCompare
  46 0014 00BF     		nop
  47 0016 0837     		adds	r7, r7, #8
  48              		.cfi_def_cfa_offset 8
  49 0018 BD46     		mov	sp, r7
  50              		.cfi_def_cfa_register 13
  51              		@ sp needed
  52 001a 80BD     		pop	{r7, pc}
  53              		.cfi_endproc
  54              	.LFE64:
  55              		.size	motor_left, .-motor_left
  56              		.section	.text.motor_right,"ax",%progbits
  57              		.align	2
  58              		.thumb
  59              		.thumb_func
  60              		.type	motor_right, %function
  61              	motor_right:
  62              	.LFB65:
  16:MOVEMENT.c    **** static void motor_right(uint16 val) { PWM_2_WriteCompare(val); }
  63              		.loc 1 16 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 8
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67 0000 80B5     		push	{r7, lr}
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 7, -8
  70              		.cfi_offset 14, -4
  71 0002 82B0     		sub	sp, sp, #8
  72              		.cfi_def_cfa_offset 16
  73 0004 00AF     		add	r7, sp, #0
  74              		.cfi_def_cfa_register 7
  75 0006 0346     		mov	r3, r0
  76 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  77              		.loc 1 16 0
  78 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
  79 000c DBB2     		uxtb	r3, r3
  80 000e 1846     		mov	r0, r3
  81 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  82 0014 00BF     		nop
  83 0016 0837     		adds	r7, r7, #8
  84              		.cfi_def_cfa_offset 8
  85 0018 BD46     		mov	sp, r7
  86              		.cfi_def_cfa_register 13
  87              		@ sp needed
  88 001a 80BD     		pop	{r7, pc}
  89              		.cfi_endproc
  90              	.LFE65:
  91              		.size	motor_right, .-motor_right
  92              		.global	Kp
  93              		.data
  94              		.align	2
  95              		.type	Kp, %object
  96              		.size	Kp, 4
  97              	Kp:
  98 0000 0000003F 		.word	1056964608
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 3


  99              		.global	Ki
 100              		.align	2
 101              		.type	Ki, %object
 102              		.size	Ki, 4
 103              	Ki:
 104 0004 CDCCCC3D 		.word	1036831949
 105              		.global	Kd
 106              		.align	2
 107              		.type	Kd, %object
 108              		.size	Kd, 4
 109              	Kd:
 110 0008 CDCC4C3D 		.word	1028443341
 111              		.bss
 112              		.align	2
 113              	integral:
 114 0000 00000000 		.space	4
 115              		.align	2
 116              	prev_error:
 117 0004 00000000 		.space	4
 118              		.comm	error,4,4
 119              		.comm	derivative,4,4
 120              		.comm	output,4,4
 121              		.global	left_pwm
 122              		.data
 123              		.type	left_pwm, %object
 124              		.size	left_pwm, 1
 125              	left_pwm:
 126 000c AC       		.byte	-84
 127              		.global	right_pwm
 128              		.type	right_pwm, %object
 129              		.size	right_pwm, 1
 130              	right_pwm:
 131 000d B0       		.byte	-80
 132              		.global	__aeabi_i2f
 133              		.global	__aeabi_fadd
 134              		.global	__aeabi_fsub
 135              		.global	__aeabi_fmul
 136              		.global	__aeabi_f2d
 137              		.global	__aeabi_dmul
 138              		.global	__aeabi_d2f
 139              		.global	__aeabi_fcmpgt
 140              		.global	__aeabi_fcmplt
 141              		.global	__aeabi_f2iz
 142              		.section	.text.do_straight_with_pid,"ax",%progbits
 143              		.align	2
 144              		.global	do_straight_with_pid
 145              		.thumb
 146              		.thumb_func
 147              		.type	do_straight_with_pid, %function
 148              	do_straight_with_pid:
 149              	.LFB66:
  17:MOVEMENT.c    **** 
  18:MOVEMENT.c    **** // PID constants (tune these)
  19:MOVEMENT.c    **** float Kp = 0.5;
  20:MOVEMENT.c    **** float Ki = 0.1;
  21:MOVEMENT.c    **** float Kd = 0.05;
  22:MOVEMENT.c    **** static float integral = 0;
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 4


  23:MOVEMENT.c    **** static float prev_error = 0;
  24:MOVEMENT.c    **** int error;
  25:MOVEMENT.c    **** float derivative;
  26:MOVEMENT.c    **** float output;
  27:MOVEMENT.c    **** uint8_t left_pwm = 172;
  28:MOVEMENT.c    **** uint8_t right_pwm = 176;
  29:MOVEMENT.c    **** 
  30:MOVEMENT.c    **** void usbPutString(char *s);
  31:MOVEMENT.c    **** 
  32:MOVEMENT.c    **** void do_straight_with_pid(void)
  33:MOVEMENT.c    **** {
 150              		.loc 1 33 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 8
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154 0000 90B5     		push	{r4, r7, lr}
 155              		.cfi_def_cfa_offset 12
 156              		.cfi_offset 4, -12
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 83B0     		sub	sp, sp, #12
 160              		.cfi_def_cfa_offset 24
 161 0004 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
  34:MOVEMENT.c    ****         
  35:MOVEMENT.c    ****         int left_enc = QuadDec_M1_GetCounter();
 163              		.loc 1 35 0
 164 0006 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 165 000a 0346     		mov	r3, r0
 166 000c 7B60     		str	r3, [r7, #4]
  36:MOVEMENT.c    ****         int right_enc = QuadDec_M2_GetCounter();
 167              		.loc 1 36 0
 168 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 169 0012 0346     		mov	r3, r0
 170 0014 3B60     		str	r3, [r7]
  37:MOVEMENT.c    ****         error = left_enc + right_enc;
 171              		.loc 1 37 0
 172 0016 7A68     		ldr	r2, [r7, #4]
 173 0018 3B68     		ldr	r3, [r7]
 174 001a 1344     		add	r3, r3, r2
 175 001c 624A     		ldr	r2, .L14+8
 176 001e 1360     		str	r3, [r2]
  38:MOVEMENT.c    **** 
  39:MOVEMENT.c    ****         // PID
  40:MOVEMENT.c    ****         integral += error;
 177              		.loc 1 40 0
 178 0020 614B     		ldr	r3, .L14+8
 179 0022 1B68     		ldr	r3, [r3]
 180 0024 1846     		mov	r0, r3
 181 0026 FFF7FEFF 		bl	__aeabi_i2f
 182 002a 0246     		mov	r2, r0
 183 002c 5F4B     		ldr	r3, .L14+12
 184 002e 1B68     		ldr	r3, [r3]	@ float
 185 0030 1946     		mov	r1, r3
 186 0032 1046     		mov	r0, r2
 187 0034 FFF7FEFF 		bl	__aeabi_fadd
 188 0038 0346     		mov	r3, r0
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 5


 189 003a 1A46     		mov	r2, r3
 190 003c 5B4B     		ldr	r3, .L14+12
 191 003e 1A60     		str	r2, [r3]	@ float
  41:MOVEMENT.c    ****         derivative = error - prev_error;
 192              		.loc 1 41 0
 193 0040 594B     		ldr	r3, .L14+8
 194 0042 1B68     		ldr	r3, [r3]
 195 0044 1846     		mov	r0, r3
 196 0046 FFF7FEFF 		bl	__aeabi_i2f
 197 004a 0246     		mov	r2, r0
 198 004c 584B     		ldr	r3, .L14+16
 199 004e 1B68     		ldr	r3, [r3]	@ float
 200 0050 1946     		mov	r1, r3
 201 0052 1046     		mov	r0, r2
 202 0054 FFF7FEFF 		bl	__aeabi_fsub
 203 0058 0346     		mov	r3, r0
 204 005a 1A46     		mov	r2, r3
 205 005c 554B     		ldr	r3, .L14+20
 206 005e 1A60     		str	r2, [r3]	@ float
  42:MOVEMENT.c    ****         output = Kp * error + Ki * integral + Kd * derivative;
 207              		.loc 1 42 0
 208 0060 514B     		ldr	r3, .L14+8
 209 0062 1B68     		ldr	r3, [r3]
 210 0064 1846     		mov	r0, r3
 211 0066 FFF7FEFF 		bl	__aeabi_i2f
 212 006a 0246     		mov	r2, r0
 213 006c 524B     		ldr	r3, .L14+24
 214 006e 1B68     		ldr	r3, [r3]	@ float
 215 0070 1946     		mov	r1, r3
 216 0072 1046     		mov	r0, r2
 217 0074 FFF7FEFF 		bl	__aeabi_fmul
 218 0078 0346     		mov	r3, r0
 219 007a 1C46     		mov	r4, r3
 220 007c 4F4B     		ldr	r3, .L14+28
 221 007e 1A68     		ldr	r2, [r3]	@ float
 222 0080 4A4B     		ldr	r3, .L14+12
 223 0082 1B68     		ldr	r3, [r3]	@ float
 224 0084 1946     		mov	r1, r3
 225 0086 1046     		mov	r0, r2
 226 0088 FFF7FEFF 		bl	__aeabi_fmul
 227 008c 0346     		mov	r3, r0
 228 008e 1946     		mov	r1, r3
 229 0090 2046     		mov	r0, r4
 230 0092 FFF7FEFF 		bl	__aeabi_fadd
 231 0096 0346     		mov	r3, r0
 232 0098 1C46     		mov	r4, r3
 233 009a 494B     		ldr	r3, .L14+32
 234 009c 1A68     		ldr	r2, [r3]	@ float
 235 009e 454B     		ldr	r3, .L14+20
 236 00a0 1B68     		ldr	r3, [r3]	@ float
 237 00a2 1946     		mov	r1, r3
 238 00a4 1046     		mov	r0, r2
 239 00a6 FFF7FEFF 		bl	__aeabi_fmul
 240 00aa 0346     		mov	r3, r0
 241 00ac 1946     		mov	r1, r3
 242 00ae 2046     		mov	r0, r4
 243 00b0 FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 6


 244 00b4 0346     		mov	r3, r0
 245 00b6 1A46     		mov	r2, r3
 246 00b8 424B     		ldr	r3, .L14+36
 247 00ba 1A60     		str	r2, [r3]	@ float
  43:MOVEMENT.c    ****         output *= 0.2;
 248              		.loc 1 43 0
 249 00bc 414B     		ldr	r3, .L14+36
 250 00be 1B68     		ldr	r3, [r3]	@ float
 251 00c0 1846     		mov	r0, r3
 252 00c2 FFF7FEFF 		bl	__aeabi_f2d
 253 00c6 36A3     		adr	r3, .L14
 254 00c8 D3E90023 		ldrd	r2, [r3]
 255 00cc FFF7FEFF 		bl	__aeabi_dmul
 256 00d0 0346     		mov	r3, r0
 257 00d2 0C46     		mov	r4, r1
 258 00d4 1846     		mov	r0, r3
 259 00d6 2146     		mov	r1, r4
 260 00d8 FFF7FEFF 		bl	__aeabi_d2f
 261 00dc 0246     		mov	r2, r0
 262 00de 394B     		ldr	r3, .L14+36
 263 00e0 1A60     		str	r2, [r3]	@ float
  44:MOVEMENT.c    ****         
  45:MOVEMENT.c    ****         if (integral > 500) integral = 500;
 264              		.loc 1 45 0
 265 00e2 324B     		ldr	r3, .L14+12
 266 00e4 1B68     		ldr	r3, [r3]	@ float
 267 00e6 3849     		ldr	r1, .L14+40
 268 00e8 1846     		mov	r0, r3
 269 00ea FFF7FEFF 		bl	__aeabi_fcmpgt
 270 00ee 0346     		mov	r3, r0
 271 00f0 002B     		cmp	r3, #0
 272 00f2 02D0     		beq	.L4
 273              		.loc 1 45 0 is_stmt 0 discriminator 1
 274 00f4 2D4B     		ldr	r3, .L14+12
 275 00f6 344A     		ldr	r2, .L14+40
 276 00f8 1A60     		str	r2, [r3]	@ float
 277              	.L4:
  46:MOVEMENT.c    ****         if (integral < -500) integral = -500;
 278              		.loc 1 46 0 is_stmt 1
 279 00fa 2C4B     		ldr	r3, .L14+12
 280 00fc 1B68     		ldr	r3, [r3]	@ float
 281 00fe 3349     		ldr	r1, .L14+44
 282 0100 1846     		mov	r0, r3
 283 0102 FFF7FEFF 		bl	__aeabi_fcmplt
 284 0106 0346     		mov	r3, r0
 285 0108 002B     		cmp	r3, #0
 286 010a 02D0     		beq	.L6
 287              		.loc 1 46 0 is_stmt 0 discriminator 1
 288 010c 274B     		ldr	r3, .L14+12
 289 010e 2F4A     		ldr	r2, .L14+44
 290 0110 1A60     		str	r2, [r3]	@ float
 291              	.L6:
  47:MOVEMENT.c    **** 
  48:MOVEMENT.c    ****         // Adjust PWM values
  49:MOVEMENT.c    ****         left_pwm  -= (int)output;
 292              		.loc 1 49 0 is_stmt 1
 293 0112 2F4B     		ldr	r3, .L14+48
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 7


 294 0114 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 295 0116 2B4B     		ldr	r3, .L14+36
 296 0118 1B68     		ldr	r3, [r3]	@ float
 297 011a 1846     		mov	r0, r3
 298 011c FFF7FEFF 		bl	__aeabi_f2iz
 299 0120 0346     		mov	r3, r0
 300 0122 DBB2     		uxtb	r3, r3
 301 0124 E31A     		subs	r3, r4, r3
 302 0126 DAB2     		uxtb	r2, r3
 303 0128 294B     		ldr	r3, .L14+48
 304 012a 1A70     		strb	r2, [r3]
  50:MOVEMENT.c    ****         right_pwm += (int)output;
 305              		.loc 1 50 0
 306 012c 254B     		ldr	r3, .L14+36
 307 012e 1B68     		ldr	r3, [r3]	@ float
 308 0130 1846     		mov	r0, r3
 309 0132 FFF7FEFF 		bl	__aeabi_f2iz
 310 0136 0346     		mov	r3, r0
 311 0138 DAB2     		uxtb	r2, r3
 312 013a 264B     		ldr	r3, .L14+52
 313 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 314 013e 1344     		add	r3, r3, r2
 315 0140 DAB2     		uxtb	r2, r3
 316 0142 244B     		ldr	r3, .L14+52
 317 0144 1A70     		strb	r2, [r3]
  51:MOVEMENT.c    **** 
  52:MOVEMENT.c    ****         // Clamp
  53:MOVEMENT.c    ****         if (left_pwm < PID_PWM_MIN) left_pwm = PID_PWM_MIN;
 318              		.loc 1 53 0
 319 0146 224B     		ldr	r3, .L14+48
 320 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 321 014a 7E2B     		cmp	r3, #126
 322 014c 02D8     		bhi	.L12
 323              		.loc 1 53 0 is_stmt 0 discriminator 1
 324 014e 204B     		ldr	r3, .L14+48
 325 0150 7F22     		movs	r2, #127
 326 0152 1A70     		strb	r2, [r3]
 327              	.L12:
  54:MOVEMENT.c    ****         if (left_pwm > PID_PWM_MAX) left_pwm = PID_PWM_MAX;
  55:MOVEMENT.c    ****         if (right_pwm < PID_PWM_MIN) right_pwm = PID_PWM_MIN;
 328              		.loc 1 55 0 is_stmt 1
 329 0154 1F4B     		ldr	r3, .L14+52
 330 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 331 0158 7E2B     		cmp	r3, #126
 332 015a 02D8     		bhi	.L13
 333              		.loc 1 55 0 is_stmt 0 discriminator 1
 334 015c 1D4B     		ldr	r3, .L14+52
 335 015e 7F22     		movs	r2, #127
 336 0160 1A70     		strb	r2, [r3]
 337              	.L13:
  56:MOVEMENT.c    ****         if (right_pwm > PID_PWM_MAX) right_pwm = PID_PWM_MAX;
  57:MOVEMENT.c    **** 
  58:MOVEMENT.c    ****         // Reset counters
  59:MOVEMENT.c    ****         QuadDec_M1_SetCounter(0);
 338              		.loc 1 59 0 is_stmt 1
 339 0162 0020     		movs	r0, #0
 340 0164 FFF7FEFF 		bl	QuadDec_M1_SetCounter
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 8


  60:MOVEMENT.c    ****         QuadDec_M2_SetCounter(0);
 341              		.loc 1 60 0
 342 0168 0020     		movs	r0, #0
 343 016a FFF7FEFF 		bl	QuadDec_M2_SetCounter
  61:MOVEMENT.c    **** 
  62:MOVEMENT.c    ****     motor_left(left_pwm);
 344              		.loc 1 62 0
 345 016e 184B     		ldr	r3, .L14+48
 346 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 347 0172 9BB2     		uxth	r3, r3
 348 0174 1846     		mov	r0, r3
 349 0176 FFF7FEFF 		bl	motor_left
  63:MOVEMENT.c    ****     motor_right(right_pwm);
 350              		.loc 1 63 0
 351 017a 164B     		ldr	r3, .L14+52
 352 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 353 017e 9BB2     		uxth	r3, r3
 354 0180 1846     		mov	r0, r3
 355 0182 FFF7FEFF 		bl	motor_right
  64:MOVEMENT.c    **** 
  65:MOVEMENT.c    ****     prev_error = error;
 356              		.loc 1 65 0
 357 0186 084B     		ldr	r3, .L14+8
 358 0188 1B68     		ldr	r3, [r3]
 359 018a 1846     		mov	r0, r3
 360 018c FFF7FEFF 		bl	__aeabi_i2f
 361 0190 0246     		mov	r2, r0
 362 0192 074B     		ldr	r3, .L14+16
 363 0194 1A60     		str	r2, [r3]	@ float
  66:MOVEMENT.c    ****     
  67:MOVEMENT.c    ****     //debug
  68:MOVEMENT.c    ****     ///#ifdef USE_USB
  69:MOVEMENT.c    ****     //char buf[64];
  70:MOVEMENT.c    ****     //sprintf(buf, "L:%d R:%d Err:%d Int:%d Der:%d Out:%d LPW:%d RPMW:%d\r\n",
  71:MOVEMENT.c    ****      //       left_enc, right_enc, error, (int)integral, (int)derivative, (int)output, left_pwm, ri
  72:MOVEMENT.c    ****     //usbPutString(buf);
  73:MOVEMENT.c    ****     //#endif
  74:MOVEMENT.c    **** }
 364              		.loc 1 74 0
 365 0196 00BF     		nop
 366 0198 0C37     		adds	r7, r7, #12
 367              		.cfi_def_cfa_offset 12
 368 019a BD46     		mov	sp, r7
 369              		.cfi_def_cfa_register 13
 370              		@ sp needed
 371 019c 90BD     		pop	{r4, r7, pc}
 372              	.L15:
 373 019e 00BF     		.align	3
 374              	.L14:
 375 01a0 9A999999 		.word	-1717986918
 376 01a4 9999C93F 		.word	1070176665
 377 01a8 00000000 		.word	error
 378 01ac 00000000 		.word	integral
 379 01b0 04000000 		.word	prev_error
 380 01b4 00000000 		.word	derivative
 381 01b8 00000000 		.word	Kp
 382 01bc 00000000 		.word	Ki
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 9


 383 01c0 00000000 		.word	Kd
 384 01c4 00000000 		.word	output
 385 01c8 0000FA43 		.word	1140457472
 386 01cc 0000FAC3 		.word	-1007026176
 387 01d0 00000000 		.word	left_pwm
 388 01d4 00000000 		.word	right_pwm
 389              		.cfi_endproc
 390              	.LFE66:
 391              		.size	do_straight_with_pid, .-do_straight_with_pid
 392              		.section	.text.stop,"ax",%progbits
 393              		.align	2
 394              		.global	stop
 395              		.thumb
 396              		.thumb_func
 397              		.type	stop, %function
 398              	stop:
 399              	.LFB67:
  75:MOVEMENT.c    **** 
  76:MOVEMENT.c    **** 
  77:MOVEMENT.c    **** void stop(void)
  78:MOVEMENT.c    **** {
 400              		.loc 1 78 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404 0000 80B5     		push	{r7, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
  79:MOVEMENT.c    ****     motor_left(PWM_STOP);
 410              		.loc 1 79 0
 411 0004 7F20     		movs	r0, #127
 412 0006 FFF7FEFF 		bl	motor_left
  80:MOVEMENT.c    ****     motor_right(PWM_STOP);
 413              		.loc 1 80 0
 414 000a 7F20     		movs	r0, #127
 415 000c FFF7FEFF 		bl	motor_right
  81:MOVEMENT.c    **** }
 416              		.loc 1 81 0
 417 0010 00BF     		nop
 418 0012 80BD     		pop	{r7, pc}
 419              		.cfi_endproc
 420              	.LFE67:
 421              		.size	stop, .-stop
 422              		.section	.text.move_handling,"ax",%progbits
 423              		.align	2
 424              		.global	move_handling
 425              		.thumb
 426              		.thumb_func
 427              		.type	move_handling, %function
 428              	move_handling:
 429              	.LFB68:
  82:MOVEMENT.c    **** 
  83:MOVEMENT.c    **** void move_handling(void)
  84:MOVEMENT.c    **** {
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 10


 430              		.loc 1 84 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 8
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 82B0     		sub	sp, sp, #8
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
  85:MOVEMENT.c    ****     MovementState m = GetMovement();
 442              		.loc 1 85 0
 443 0006 FFF7FEFF 		bl	GetMovement
 444 000a 0346     		mov	r3, r0
 445 000c FB71     		strb	r3, [r7, #7]
  86:MOVEMENT.c    **** 
  87:MOVEMENT.c    ****     switch (m) {
 446              		.loc 1 87 0
 447 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 448 0010 062B     		cmp	r3, #6
 449 0012 4ED8     		bhi	.L18
 450 0014 01A2     		adr	r2, .L20
 451 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 452 001a 00BF     		.p2align 2
 453              	.L20:
 454 001c 3F000000 		.word	.L19+1
 455 0020 45000000 		.word	.L21+1
 456 0024 53000000 		.word	.L22+1
 457 0028 B3000000 		.word	.L18+1
 458 002c B3000000 		.word	.L18+1
 459 0030 39000000 		.word	.L23+1
 460 0034 61000000 		.word	.L24+1
 461              		.p2align 1
 462              	.L23:
  88:MOVEMENT.c    ****         case STOP:
  89:MOVEMENT.c    ****             stop();
 463              		.loc 1 89 0
 464 0038 FFF7FEFF 		bl	stop
  90:MOVEMENT.c    ****             break;
 465              		.loc 1 90 0
 466 003c 3CE0     		b	.L25
 467              	.L19:
  91:MOVEMENT.c    **** 
  92:MOVEMENT.c    ****         case STRAIGHT:
  93:MOVEMENT.c    ****             do_straight_with_pid();  // PID active for straight line
 468              		.loc 1 93 0
 469 003e FFF7FEFF 		bl	do_straight_with_pid
  94:MOVEMENT.c    ****             break;
 470              		.loc 1 94 0
 471 0042 39E0     		b	.L25
 472              	.L21:
  95:MOVEMENT.c    **** 
  96:MOVEMENT.c    ****         case LEFT_TURN:
  97:MOVEMENT.c    ****             motor_left(127);    // pivot left
 473              		.loc 1 97 0
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 11


 474 0044 7F20     		movs	r0, #127
 475 0046 FFF7FEFF 		bl	motor_left
  98:MOVEMENT.c    ****             motor_right(127);
 476              		.loc 1 98 0
 477 004a 7F20     		movs	r0, #127
 478 004c FFF7FEFF 		bl	motor_right
  99:MOVEMENT.c    ****             break;
 479              		.loc 1 99 0
 480 0050 32E0     		b	.L25
 481              	.L22:
 100:MOVEMENT.c    **** 
 101:MOVEMENT.c    ****         case RIGHT_TURN:
 102:MOVEMENT.c    ****             motor_left(168);
 482              		.loc 1 102 0
 483 0052 A820     		movs	r0, #168
 484 0054 FFF7FEFF 		bl	motor_left
 103:MOVEMENT.c    ****             motor_right(99);   // pivot right
 485              		.loc 1 103 0
 486 0058 6320     		movs	r0, #99
 487 005a FFF7FEFF 		bl	motor_right
 104:MOVEMENT.c    ****             break;
 488              		.loc 1 104 0
 489 005e 2BE0     		b	.L25
 490              	.L24:
 105:MOVEMENT.c    **** 
 106:MOVEMENT.c    ****         case WAIT:
 107:MOVEMENT.c    ****            // Keep turning in the same direction until middle sensors see line again
 108:MOVEMENT.c    ****     if (Output_5_Read() && Output_4_Read()) {
 491              		.loc 1 108 0
 492 0060 FFF7FEFF 		bl	Output_5_Read
 493 0064 0346     		mov	r3, r0
 494 0066 002B     		cmp	r3, #0
 495 0068 0AD0     		beq	.L26
 496              		.loc 1 108 0 is_stmt 0 discriminator 1
 497 006a FFF7FEFF 		bl	Output_4_Read
 498 006e 0346     		mov	r3, r0
 499 0070 002B     		cmp	r3, #0
 500 0072 05D0     		beq	.L26
 109:MOVEMENT.c    ****         // Line reacquired (assuming active-low sensors: 0 = line detected)
 110:MOVEMENT.c    ****         do_straight_with_pid();
 501              		.loc 1 110 0 is_stmt 1
 502 0074 FFF7FEFF 		bl	do_straight_with_pid
 111:MOVEMENT.c    ****         previous_movement = STRAIGHT;
 503              		.loc 1 111 0
 504 0078 144B     		ldr	r3, .L32
 505 007a 0022     		movs	r2, #0
 506 007c 1A70     		strb	r2, [r3]
 112:MOVEMENT.c    ****     } 
 113:MOVEMENT.c    ****     else {
 114:MOVEMENT.c    ****         // Continue the previous turn direction
 115:MOVEMENT.c    ****         if (previous_movement == LEFT_TURN) {
 116:MOVEMENT.c    ****             motor_left(127);
 117:MOVEMENT.c    ****             motor_right(168);   // keep turning left
 118:MOVEMENT.c    ****         } 
 119:MOVEMENT.c    ****         else if (previous_movement == RIGHT_TURN) {
 120:MOVEMENT.c    ****             motor_left(168);
 121:MOVEMENT.c    ****             motor_right(99);    // keep turning right
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 12


 122:MOVEMENT.c    ****         } 
 123:MOVEMENT.c    ****         else {
 124:MOVEMENT.c    ****             // Default to stop if no previous movement known
 125:MOVEMENT.c    ****             stop();
 126:MOVEMENT.c    ****         }
 127:MOVEMENT.c    ****     }
 128:MOVEMENT.c    ****     break;
 507              		.loc 1 128 0
 508 007e 1BE0     		b	.L25
 509              	.L26:
 115:MOVEMENT.c    ****             motor_left(127);
 510              		.loc 1 115 0
 511 0080 124B     		ldr	r3, .L32
 512 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513 0084 012B     		cmp	r3, #1
 514 0086 06D1     		bne	.L28
 116:MOVEMENT.c    ****             motor_right(168);   // keep turning left
 515              		.loc 1 116 0
 516 0088 7F20     		movs	r0, #127
 517 008a FFF7FEFF 		bl	motor_left
 117:MOVEMENT.c    ****         } 
 518              		.loc 1 117 0
 519 008e A820     		movs	r0, #168
 520 0090 FFF7FEFF 		bl	motor_right
 521              		.loc 1 128 0
 522 0094 10E0     		b	.L25
 523              	.L28:
 119:MOVEMENT.c    ****             motor_left(168);
 524              		.loc 1 119 0
 525 0096 0D4B     		ldr	r3, .L32
 526 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 009a 022B     		cmp	r3, #2
 528 009c 06D1     		bne	.L29
 120:MOVEMENT.c    ****             motor_right(99);    // keep turning right
 529              		.loc 1 120 0
 530 009e A820     		movs	r0, #168
 531 00a0 FFF7FEFF 		bl	motor_left
 121:MOVEMENT.c    ****         } 
 532              		.loc 1 121 0
 533 00a4 6320     		movs	r0, #99
 534 00a6 FFF7FEFF 		bl	motor_right
 535              		.loc 1 128 0
 536 00aa 05E0     		b	.L25
 537              	.L29:
 125:MOVEMENT.c    ****         }
 538              		.loc 1 125 0
 539 00ac FFF7FEFF 		bl	stop
 540              		.loc 1 128 0
 541 00b0 02E0     		b	.L25
 542              	.L18:
 129:MOVEMENT.c    **** 
 130:MOVEMENT.c    ****         default:
 131:MOVEMENT.c    ****             stop();
 543              		.loc 1 131 0
 544 00b2 FFF7FEFF 		bl	stop
 132:MOVEMENT.c    ****             break;
 545              		.loc 1 132 0
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 13


 546 00b6 00BF     		nop
 547              	.L25:
 133:MOVEMENT.c    ****          
 134:MOVEMENT.c    ****         }
 135:MOVEMENT.c    ****         if (m != WAIT) {
 548              		.loc 1 135 0
 549 00b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 550 00ba 062B     		cmp	r3, #6
 551 00bc 02D0     		beq	.L31
 136:MOVEMENT.c    ****             previous_movement = m;
 552              		.loc 1 136 0
 553 00be 034A     		ldr	r2, .L32
 554 00c0 FB79     		ldrb	r3, [r7, #7]
 555 00c2 1370     		strb	r3, [r2]
 556              	.L31:
 137:MOVEMENT.c    ****     }
 138:MOVEMENT.c    **** }
 557              		.loc 1 138 0
 558 00c4 00BF     		nop
 559 00c6 0837     		adds	r7, r7, #8
 560              		.cfi_def_cfa_offset 8
 561 00c8 BD46     		mov	sp, r7
 562              		.cfi_def_cfa_register 13
 563              		@ sp needed
 564 00ca 80BD     		pop	{r7, pc}
 565              	.L33:
 566              		.align	2
 567              	.L32:
 568 00cc 00000000 		.word	previous_movement
 569              		.cfi_endproc
 570              	.LFE68:
 571              		.size	move_handling, .-move_handling
 572              		.text
 573              	.Letext0:
 574              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 575              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 576              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 577              		.file 5 "SENSORS_READ.h"
 578              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 579              		.section	.debug_info,"",%progbits
 580              	.Ldebug_info0:
 581 0000 75020000 		.4byte	0x275
 582 0004 0400     		.2byte	0x4
 583 0006 00000000 		.4byte	.Ldebug_abbrev0
 584 000a 04       		.byte	0x4
 585 000b 01       		.uleb128 0x1
 586 000c 0A000000 		.4byte	.LASF42
 587 0010 0C       		.byte	0xc
 588 0011 A7010000 		.4byte	.LASF43
 589 0015 2F020000 		.4byte	.LASF44
 590 0019 00000000 		.4byte	.Ldebug_ranges0+0
 591 001d 00000000 		.4byte	0
 592 0021 00000000 		.4byte	.Ldebug_line0
 593 0025 02       		.uleb128 0x2
 594 0026 01       		.byte	0x1
 595 0027 06       		.byte	0x6
 596 0028 0D010000 		.4byte	.LASF0
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 14


 597 002c 03       		.uleb128 0x3
 598 002d 00000000 		.4byte	.LASF4
 599 0031 02       		.byte	0x2
 600 0032 1D       		.byte	0x1d
 601 0033 37000000 		.4byte	0x37
 602 0037 02       		.uleb128 0x2
 603 0038 01       		.byte	0x1
 604 0039 08       		.byte	0x8
 605 003a 19010000 		.4byte	.LASF1
 606 003e 02       		.uleb128 0x2
 607 003f 02       		.byte	0x2
 608 0040 05       		.byte	0x5
 609 0041 12020000 		.4byte	.LASF2
 610 0045 02       		.uleb128 0x2
 611 0046 02       		.byte	0x2
 612 0047 07       		.byte	0x7
 613 0048 5C010000 		.4byte	.LASF3
 614 004c 03       		.uleb128 0x3
 615 004d BA000000 		.4byte	.LASF5
 616 0051 02       		.byte	0x2
 617 0052 3F       		.byte	0x3f
 618 0053 57000000 		.4byte	0x57
 619 0057 02       		.uleb128 0x2
 620 0058 04       		.byte	0x4
 621 0059 05       		.byte	0x5
 622 005a 8A020000 		.4byte	.LASF6
 623 005e 02       		.uleb128 0x2
 624 005f 04       		.byte	0x4
 625 0060 07       		.byte	0x7
 626 0061 4A010000 		.4byte	.LASF7
 627 0065 02       		.uleb128 0x2
 628 0066 08       		.byte	0x8
 629 0067 05       		.byte	0x5
 630 0068 FF010000 		.4byte	.LASF8
 631 006c 02       		.uleb128 0x2
 632 006d 08       		.byte	0x8
 633 006e 07       		.byte	0x7
 634 006f BF010000 		.4byte	.LASF9
 635 0073 04       		.uleb128 0x4
 636 0074 04       		.byte	0x4
 637 0075 05       		.byte	0x5
 638 0076 696E7400 		.ascii	"int\000"
 639 007a 02       		.uleb128 0x2
 640 007b 04       		.byte	0x4
 641 007c 07       		.byte	0x7
 642 007d B2010000 		.4byte	.LASF10
 643 0081 03       		.uleb128 0x3
 644 0082 D6010000 		.4byte	.LASF11
 645 0086 03       		.byte	0x3
 646 0087 18       		.byte	0x18
 647 0088 2C000000 		.4byte	0x2c
 648 008c 03       		.uleb128 0x3
 649 008d FF000000 		.4byte	.LASF12
 650 0091 03       		.byte	0x3
 651 0092 2C       		.byte	0x2c
 652 0093 4C000000 		.4byte	0x4c
 653 0097 05       		.uleb128 0x5
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 15


 654 0098 97010000 		.4byte	.LASF13
 655 009c 04       		.byte	0x4
 656 009d E801     		.2byte	0x1e8
 657 009f 45000000 		.4byte	0x45
 658 00a3 02       		.uleb128 0x2
 659 00a4 04       		.byte	0x4
 660 00a5 04       		.byte	0x4
 661 00a6 07010000 		.4byte	.LASF14
 662 00aa 02       		.uleb128 0x2
 663 00ab 08       		.byte	0x8
 664 00ac 04       		.byte	0x4
 665 00ad 8B010000 		.4byte	.LASF15
 666 00b1 02       		.uleb128 0x2
 667 00b2 01       		.byte	0x1
 668 00b3 08       		.byte	0x8
 669 00b4 0D020000 		.4byte	.LASF16
 670 00b8 02       		.uleb128 0x2
 671 00b9 08       		.byte	0x8
 672 00ba 04       		.byte	0x4
 673 00bb 93020000 		.4byte	.LASF17
 674 00bf 02       		.uleb128 0x2
 675 00c0 04       		.byte	0x4
 676 00c1 07       		.byte	0x7
 677 00c2 F0010000 		.4byte	.LASF18
 678 00c6 06       		.uleb128 0x6
 679 00c7 01       		.byte	0x1
 680 00c8 37000000 		.4byte	0x37
 681 00cc 05       		.byte	0x5
 682 00cd 1B       		.byte	0x1b
 683 00ce FD000000 		.4byte	0xfd
 684 00d2 07       		.uleb128 0x7
 685 00d3 76020000 		.4byte	.LASF19
 686 00d7 00       		.byte	0
 687 00d8 07       		.uleb128 0x7
 688 00d9 6F010000 		.4byte	.LASF20
 689 00dd 01       		.byte	0x1
 690 00de 07       		.uleb128 0x7
 691 00df 31010000 		.4byte	.LASF21
 692 00e3 02       		.byte	0x2
 693 00e4 07       		.uleb128 0x7
 694 00e5 E3010000 		.4byte	.LASF22
 695 00e9 03       		.byte	0x3
 696 00ea 07       		.uleb128 0x7
 697 00eb A3000000 		.4byte	.LASF23
 698 00ef 04       		.byte	0x4
 699 00f0 07       		.uleb128 0x7
 700 00f1 92010000 		.4byte	.LASF24
 701 00f5 05       		.byte	0x5
 702 00f6 07       		.uleb128 0x7
 703 00f7 DE010000 		.4byte	.LASF25
 704 00fb 06       		.byte	0x6
 705 00fc 00       		.byte	0
 706 00fd 03       		.uleb128 0x3
 707 00fe 9F020000 		.4byte	.LASF26
 708 0102 05       		.byte	0x5
 709 0103 23       		.byte	0x23
 710 0104 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 16


 711 0108 08       		.uleb128 0x8
 712 0109 98000000 		.4byte	.LASF27
 713 010d 01       		.byte	0x1
 714 010e 0F       		.byte	0xf
 715 010f 00000000 		.4byte	.LFB64
 716 0113 1C000000 		.4byte	.LFE64-.LFB64
 717 0117 01       		.uleb128 0x1
 718 0118 9C       		.byte	0x9c
 719 0119 2C010000 		.4byte	0x12c
 720 011d 09       		.uleb128 0x9
 721 011e 76616C00 		.ascii	"val\000"
 722 0122 01       		.byte	0x1
 723 0123 0F       		.byte	0xf
 724 0124 97000000 		.4byte	0x97
 725 0128 02       		.uleb128 0x2
 726 0129 91       		.byte	0x91
 727 012a 76       		.sleb128 -10
 728 012b 00       		.byte	0
 729 012c 08       		.uleb128 0x8
 730 012d 23020000 		.4byte	.LASF28
 731 0131 01       		.byte	0x1
 732 0132 10       		.byte	0x10
 733 0133 00000000 		.4byte	.LFB65
 734 0137 1C000000 		.4byte	.LFE65-.LFB65
 735 013b 01       		.uleb128 0x1
 736 013c 9C       		.byte	0x9c
 737 013d 50010000 		.4byte	0x150
 738 0141 09       		.uleb128 0x9
 739 0142 76616C00 		.ascii	"val\000"
 740 0146 01       		.byte	0x1
 741 0147 10       		.byte	0x10
 742 0148 97000000 		.4byte	0x97
 743 014c 02       		.uleb128 0x2
 744 014d 91       		.byte	0x91
 745 014e 76       		.sleb128 -10
 746 014f 00       		.byte	0
 747 0150 0A       		.uleb128 0xa
 748 0151 C4000000 		.4byte	.LASF31
 749 0155 01       		.byte	0x1
 750 0156 20       		.byte	0x20
 751 0157 00000000 		.4byte	.LFB66
 752 015b D8010000 		.4byte	.LFE66-.LFB66
 753 015f 01       		.uleb128 0x1
 754 0160 9C       		.byte	0x9c
 755 0161 82010000 		.4byte	0x182
 756 0165 0B       		.uleb128 0xb
 757 0166 9E010000 		.4byte	.LASF29
 758 016a 01       		.byte	0x1
 759 016b 23       		.byte	0x23
 760 016c 73000000 		.4byte	0x73
 761 0170 02       		.uleb128 0x2
 762 0171 91       		.byte	0x91
 763 0172 6C       		.sleb128 -20
 764 0173 0B       		.uleb128 0xb
 765 0174 27010000 		.4byte	.LASF30
 766 0178 01       		.byte	0x1
 767 0179 24       		.byte	0x24
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 17


 768 017a 73000000 		.4byte	0x73
 769 017e 02       		.uleb128 0x2
 770 017f 91       		.byte	0x91
 771 0180 68       		.sleb128 -24
 772 0181 00       		.byte	0
 773 0182 0C       		.uleb128 0xc
 774 0183 79010000 		.4byte	.LASF45
 775 0187 01       		.byte	0x1
 776 0188 4D       		.byte	0x4d
 777 0189 00000000 		.4byte	.LFB67
 778 018d 14000000 		.4byte	.LFE67-.LFB67
 779 0191 01       		.uleb128 0x1
 780 0192 9C       		.byte	0x9c
 781 0193 0A       		.uleb128 0xa
 782 0194 3C010000 		.4byte	.LASF32
 783 0198 01       		.byte	0x1
 784 0199 53       		.byte	0x53
 785 019a 00000000 		.4byte	.LFB68
 786 019e D0000000 		.4byte	.LFE68-.LFB68
 787 01a2 01       		.uleb128 0x1
 788 01a3 9C       		.byte	0x9c
 789 01a4 B5010000 		.4byte	0x1b5
 790 01a8 0D       		.uleb128 0xd
 791 01a9 6D00     		.ascii	"m\000"
 792 01ab 01       		.byte	0x1
 793 01ac 55       		.byte	0x55
 794 01ad FD000000 		.4byte	0xfd
 795 01b1 02       		.uleb128 0x2
 796 01b2 91       		.byte	0x91
 797 01b3 77       		.sleb128 -9
 798 01b4 00       		.byte	0
 799 01b5 0B       		.uleb128 0xb
 800 01b6 B1000000 		.4byte	.LASF33
 801 01ba 01       		.byte	0x1
 802 01bb 16       		.byte	0x16
 803 01bc A3000000 		.4byte	0xa3
 804 01c0 05       		.uleb128 0x5
 805 01c1 03       		.byte	0x3
 806 01c2 00000000 		.4byte	integral
 807 01c6 0B       		.uleb128 0xb
 808 01c7 F4000000 		.4byte	.LASF34
 809 01cb 01       		.byte	0x1
 810 01cc 17       		.byte	0x17
 811 01cd A3000000 		.4byte	0xa3
 812 01d1 05       		.uleb128 0x5
 813 01d2 03       		.byte	0x3
 814 01d3 04000000 		.4byte	prev_error
 815 01d7 0E       		.uleb128 0xe
 816 01d8 7E010000 		.4byte	.LASF35
 817 01dc 06       		.byte	0x6
 818 01dd 1207     		.2byte	0x712
 819 01df E3010000 		.4byte	0x1e3
 820 01e3 0F       		.uleb128 0xf
 821 01e4 8C000000 		.4byte	0x8c
 822 01e8 10       		.uleb128 0x10
 823 01e9 E2000000 		.4byte	.LASF36
 824 01ed 01       		.byte	0x1
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 18


 825 01ee 07       		.byte	0x7
 826 01ef FD000000 		.4byte	0xfd
 827 01f3 11       		.uleb128 0x11
 828 01f4 4B7000   		.ascii	"Kp\000"
 829 01f7 01       		.byte	0x1
 830 01f8 13       		.byte	0x13
 831 01f9 A3000000 		.4byte	0xa3
 832 01fd 05       		.uleb128 0x5
 833 01fe 03       		.byte	0x3
 834 01ff 00000000 		.4byte	Kp
 835 0203 11       		.uleb128 0x11
 836 0204 4B6900   		.ascii	"Ki\000"
 837 0207 01       		.byte	0x1
 838 0208 14       		.byte	0x14
 839 0209 A3000000 		.4byte	0xa3
 840 020d 05       		.uleb128 0x5
 841 020e 03       		.byte	0x3
 842 020f 00000000 		.4byte	Ki
 843 0213 11       		.uleb128 0x11
 844 0214 4B6400   		.ascii	"Kd\000"
 845 0217 01       		.byte	0x1
 846 0218 15       		.byte	0x15
 847 0219 A3000000 		.4byte	0xa3
 848 021d 05       		.uleb128 0x5
 849 021e 03       		.byte	0x3
 850 021f 00000000 		.4byte	Kd
 851 0223 12       		.uleb128 0x12
 852 0224 F9010000 		.4byte	.LASF37
 853 0228 01       		.byte	0x1
 854 0229 18       		.byte	0x18
 855 022a 73000000 		.4byte	0x73
 856 022e 05       		.uleb128 0x5
 857 022f 03       		.byte	0x3
 858 0230 00000000 		.4byte	error
 859 0234 12       		.uleb128 0x12
 860 0235 7F020000 		.4byte	.LASF38
 861 0239 01       		.byte	0x1
 862 023a 19       		.byte	0x19
 863 023b A3000000 		.4byte	0xa3
 864 023f 05       		.uleb128 0x5
 865 0240 03       		.byte	0x3
 866 0241 00000000 		.4byte	derivative
 867 0245 12       		.uleb128 0x12
 868 0246 1C020000 		.4byte	.LASF39
 869 024a 01       		.byte	0x1
 870 024b 1A       		.byte	0x1a
 871 024c A3000000 		.4byte	0xa3
 872 0250 05       		.uleb128 0x5
 873 0251 03       		.byte	0x3
 874 0252 00000000 		.4byte	output
 875 0256 12       		.uleb128 0x12
 876 0257 D9000000 		.4byte	.LASF40
 877 025b 01       		.byte	0x1
 878 025c 1B       		.byte	0x1b
 879 025d 81000000 		.4byte	0x81
 880 0261 05       		.uleb128 0x5
 881 0262 03       		.byte	0x3
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 19


 882 0263 00000000 		.4byte	left_pwm
 883 0267 12       		.uleb128 0x12
 884 0268 AD020000 		.4byte	.LASF41
 885 026c 01       		.byte	0x1
 886 026d 1C       		.byte	0x1c
 887 026e 81000000 		.4byte	0x81
 888 0272 05       		.uleb128 0x5
 889 0273 03       		.byte	0x3
 890 0274 00000000 		.4byte	right_pwm
 891 0278 00       		.byte	0
 892              		.section	.debug_abbrev,"",%progbits
 893              	.Ldebug_abbrev0:
 894 0000 01       		.uleb128 0x1
 895 0001 11       		.uleb128 0x11
 896 0002 01       		.byte	0x1
 897 0003 25       		.uleb128 0x25
 898 0004 0E       		.uleb128 0xe
 899 0005 13       		.uleb128 0x13
 900 0006 0B       		.uleb128 0xb
 901 0007 03       		.uleb128 0x3
 902 0008 0E       		.uleb128 0xe
 903 0009 1B       		.uleb128 0x1b
 904 000a 0E       		.uleb128 0xe
 905 000b 55       		.uleb128 0x55
 906 000c 17       		.uleb128 0x17
 907 000d 11       		.uleb128 0x11
 908 000e 01       		.uleb128 0x1
 909 000f 10       		.uleb128 0x10
 910 0010 17       		.uleb128 0x17
 911 0011 00       		.byte	0
 912 0012 00       		.byte	0
 913 0013 02       		.uleb128 0x2
 914 0014 24       		.uleb128 0x24
 915 0015 00       		.byte	0
 916 0016 0B       		.uleb128 0xb
 917 0017 0B       		.uleb128 0xb
 918 0018 3E       		.uleb128 0x3e
 919 0019 0B       		.uleb128 0xb
 920 001a 03       		.uleb128 0x3
 921 001b 0E       		.uleb128 0xe
 922 001c 00       		.byte	0
 923 001d 00       		.byte	0
 924 001e 03       		.uleb128 0x3
 925 001f 16       		.uleb128 0x16
 926 0020 00       		.byte	0
 927 0021 03       		.uleb128 0x3
 928 0022 0E       		.uleb128 0xe
 929 0023 3A       		.uleb128 0x3a
 930 0024 0B       		.uleb128 0xb
 931 0025 3B       		.uleb128 0x3b
 932 0026 0B       		.uleb128 0xb
 933 0027 49       		.uleb128 0x49
 934 0028 13       		.uleb128 0x13
 935 0029 00       		.byte	0
 936 002a 00       		.byte	0
 937 002b 04       		.uleb128 0x4
 938 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 20


 939 002d 00       		.byte	0
 940 002e 0B       		.uleb128 0xb
 941 002f 0B       		.uleb128 0xb
 942 0030 3E       		.uleb128 0x3e
 943 0031 0B       		.uleb128 0xb
 944 0032 03       		.uleb128 0x3
 945 0033 08       		.uleb128 0x8
 946 0034 00       		.byte	0
 947 0035 00       		.byte	0
 948 0036 05       		.uleb128 0x5
 949 0037 16       		.uleb128 0x16
 950 0038 00       		.byte	0
 951 0039 03       		.uleb128 0x3
 952 003a 0E       		.uleb128 0xe
 953 003b 3A       		.uleb128 0x3a
 954 003c 0B       		.uleb128 0xb
 955 003d 3B       		.uleb128 0x3b
 956 003e 05       		.uleb128 0x5
 957 003f 49       		.uleb128 0x49
 958 0040 13       		.uleb128 0x13
 959 0041 00       		.byte	0
 960 0042 00       		.byte	0
 961 0043 06       		.uleb128 0x6
 962 0044 04       		.uleb128 0x4
 963 0045 01       		.byte	0x1
 964 0046 0B       		.uleb128 0xb
 965 0047 0B       		.uleb128 0xb
 966 0048 49       		.uleb128 0x49
 967 0049 13       		.uleb128 0x13
 968 004a 3A       		.uleb128 0x3a
 969 004b 0B       		.uleb128 0xb
 970 004c 3B       		.uleb128 0x3b
 971 004d 0B       		.uleb128 0xb
 972 004e 01       		.uleb128 0x1
 973 004f 13       		.uleb128 0x13
 974 0050 00       		.byte	0
 975 0051 00       		.byte	0
 976 0052 07       		.uleb128 0x7
 977 0053 28       		.uleb128 0x28
 978 0054 00       		.byte	0
 979 0055 03       		.uleb128 0x3
 980 0056 0E       		.uleb128 0xe
 981 0057 1C       		.uleb128 0x1c
 982 0058 0B       		.uleb128 0xb
 983 0059 00       		.byte	0
 984 005a 00       		.byte	0
 985 005b 08       		.uleb128 0x8
 986 005c 2E       		.uleb128 0x2e
 987 005d 01       		.byte	0x1
 988 005e 03       		.uleb128 0x3
 989 005f 0E       		.uleb128 0xe
 990 0060 3A       		.uleb128 0x3a
 991 0061 0B       		.uleb128 0xb
 992 0062 3B       		.uleb128 0x3b
 993 0063 0B       		.uleb128 0xb
 994 0064 27       		.uleb128 0x27
 995 0065 19       		.uleb128 0x19
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 21


 996 0066 11       		.uleb128 0x11
 997 0067 01       		.uleb128 0x1
 998 0068 12       		.uleb128 0x12
 999 0069 06       		.uleb128 0x6
 1000 006a 40       		.uleb128 0x40
 1001 006b 18       		.uleb128 0x18
 1002 006c 9642     		.uleb128 0x2116
 1003 006e 19       		.uleb128 0x19
 1004 006f 01       		.uleb128 0x1
 1005 0070 13       		.uleb128 0x13
 1006 0071 00       		.byte	0
 1007 0072 00       		.byte	0
 1008 0073 09       		.uleb128 0x9
 1009 0074 05       		.uleb128 0x5
 1010 0075 00       		.byte	0
 1011 0076 03       		.uleb128 0x3
 1012 0077 08       		.uleb128 0x8
 1013 0078 3A       		.uleb128 0x3a
 1014 0079 0B       		.uleb128 0xb
 1015 007a 3B       		.uleb128 0x3b
 1016 007b 0B       		.uleb128 0xb
 1017 007c 49       		.uleb128 0x49
 1018 007d 13       		.uleb128 0x13
 1019 007e 02       		.uleb128 0x2
 1020 007f 18       		.uleb128 0x18
 1021 0080 00       		.byte	0
 1022 0081 00       		.byte	0
 1023 0082 0A       		.uleb128 0xa
 1024 0083 2E       		.uleb128 0x2e
 1025 0084 01       		.byte	0x1
 1026 0085 3F       		.uleb128 0x3f
 1027 0086 19       		.uleb128 0x19
 1028 0087 03       		.uleb128 0x3
 1029 0088 0E       		.uleb128 0xe
 1030 0089 3A       		.uleb128 0x3a
 1031 008a 0B       		.uleb128 0xb
 1032 008b 3B       		.uleb128 0x3b
 1033 008c 0B       		.uleb128 0xb
 1034 008d 27       		.uleb128 0x27
 1035 008e 19       		.uleb128 0x19
 1036 008f 11       		.uleb128 0x11
 1037 0090 01       		.uleb128 0x1
 1038 0091 12       		.uleb128 0x12
 1039 0092 06       		.uleb128 0x6
 1040 0093 40       		.uleb128 0x40
 1041 0094 18       		.uleb128 0x18
 1042 0095 9642     		.uleb128 0x2116
 1043 0097 19       		.uleb128 0x19
 1044 0098 01       		.uleb128 0x1
 1045 0099 13       		.uleb128 0x13
 1046 009a 00       		.byte	0
 1047 009b 00       		.byte	0
 1048 009c 0B       		.uleb128 0xb
 1049 009d 34       		.uleb128 0x34
 1050 009e 00       		.byte	0
 1051 009f 03       		.uleb128 0x3
 1052 00a0 0E       		.uleb128 0xe
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 22


 1053 00a1 3A       		.uleb128 0x3a
 1054 00a2 0B       		.uleb128 0xb
 1055 00a3 3B       		.uleb128 0x3b
 1056 00a4 0B       		.uleb128 0xb
 1057 00a5 49       		.uleb128 0x49
 1058 00a6 13       		.uleb128 0x13
 1059 00a7 02       		.uleb128 0x2
 1060 00a8 18       		.uleb128 0x18
 1061 00a9 00       		.byte	0
 1062 00aa 00       		.byte	0
 1063 00ab 0C       		.uleb128 0xc
 1064 00ac 2E       		.uleb128 0x2e
 1065 00ad 00       		.byte	0
 1066 00ae 3F       		.uleb128 0x3f
 1067 00af 19       		.uleb128 0x19
 1068 00b0 03       		.uleb128 0x3
 1069 00b1 0E       		.uleb128 0xe
 1070 00b2 3A       		.uleb128 0x3a
 1071 00b3 0B       		.uleb128 0xb
 1072 00b4 3B       		.uleb128 0x3b
 1073 00b5 0B       		.uleb128 0xb
 1074 00b6 27       		.uleb128 0x27
 1075 00b7 19       		.uleb128 0x19
 1076 00b8 11       		.uleb128 0x11
 1077 00b9 01       		.uleb128 0x1
 1078 00ba 12       		.uleb128 0x12
 1079 00bb 06       		.uleb128 0x6
 1080 00bc 40       		.uleb128 0x40
 1081 00bd 18       		.uleb128 0x18
 1082 00be 9642     		.uleb128 0x2116
 1083 00c0 19       		.uleb128 0x19
 1084 00c1 00       		.byte	0
 1085 00c2 00       		.byte	0
 1086 00c3 0D       		.uleb128 0xd
 1087 00c4 34       		.uleb128 0x34
 1088 00c5 00       		.byte	0
 1089 00c6 03       		.uleb128 0x3
 1090 00c7 08       		.uleb128 0x8
 1091 00c8 3A       		.uleb128 0x3a
 1092 00c9 0B       		.uleb128 0xb
 1093 00ca 3B       		.uleb128 0x3b
 1094 00cb 0B       		.uleb128 0xb
 1095 00cc 49       		.uleb128 0x49
 1096 00cd 13       		.uleb128 0x13
 1097 00ce 02       		.uleb128 0x2
 1098 00cf 18       		.uleb128 0x18
 1099 00d0 00       		.byte	0
 1100 00d1 00       		.byte	0
 1101 00d2 0E       		.uleb128 0xe
 1102 00d3 34       		.uleb128 0x34
 1103 00d4 00       		.byte	0
 1104 00d5 03       		.uleb128 0x3
 1105 00d6 0E       		.uleb128 0xe
 1106 00d7 3A       		.uleb128 0x3a
 1107 00d8 0B       		.uleb128 0xb
 1108 00d9 3B       		.uleb128 0x3b
 1109 00da 05       		.uleb128 0x5
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 23


 1110 00db 49       		.uleb128 0x49
 1111 00dc 13       		.uleb128 0x13
 1112 00dd 3F       		.uleb128 0x3f
 1113 00de 19       		.uleb128 0x19
 1114 00df 3C       		.uleb128 0x3c
 1115 00e0 19       		.uleb128 0x19
 1116 00e1 00       		.byte	0
 1117 00e2 00       		.byte	0
 1118 00e3 0F       		.uleb128 0xf
 1119 00e4 35       		.uleb128 0x35
 1120 00e5 00       		.byte	0
 1121 00e6 49       		.uleb128 0x49
 1122 00e7 13       		.uleb128 0x13
 1123 00e8 00       		.byte	0
 1124 00e9 00       		.byte	0
 1125 00ea 10       		.uleb128 0x10
 1126 00eb 34       		.uleb128 0x34
 1127 00ec 00       		.byte	0
 1128 00ed 03       		.uleb128 0x3
 1129 00ee 0E       		.uleb128 0xe
 1130 00ef 3A       		.uleb128 0x3a
 1131 00f0 0B       		.uleb128 0xb
 1132 00f1 3B       		.uleb128 0x3b
 1133 00f2 0B       		.uleb128 0xb
 1134 00f3 49       		.uleb128 0x49
 1135 00f4 13       		.uleb128 0x13
 1136 00f5 3F       		.uleb128 0x3f
 1137 00f6 19       		.uleb128 0x19
 1138 00f7 3C       		.uleb128 0x3c
 1139 00f8 19       		.uleb128 0x19
 1140 00f9 00       		.byte	0
 1141 00fa 00       		.byte	0
 1142 00fb 11       		.uleb128 0x11
 1143 00fc 34       		.uleb128 0x34
 1144 00fd 00       		.byte	0
 1145 00fe 03       		.uleb128 0x3
 1146 00ff 08       		.uleb128 0x8
 1147 0100 3A       		.uleb128 0x3a
 1148 0101 0B       		.uleb128 0xb
 1149 0102 3B       		.uleb128 0x3b
 1150 0103 0B       		.uleb128 0xb
 1151 0104 49       		.uleb128 0x49
 1152 0105 13       		.uleb128 0x13
 1153 0106 3F       		.uleb128 0x3f
 1154 0107 19       		.uleb128 0x19
 1155 0108 02       		.uleb128 0x2
 1156 0109 18       		.uleb128 0x18
 1157 010a 00       		.byte	0
 1158 010b 00       		.byte	0
 1159 010c 12       		.uleb128 0x12
 1160 010d 34       		.uleb128 0x34
 1161 010e 00       		.byte	0
 1162 010f 03       		.uleb128 0x3
 1163 0110 0E       		.uleb128 0xe
 1164 0111 3A       		.uleb128 0x3a
 1165 0112 0B       		.uleb128 0xb
 1166 0113 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 24


 1167 0114 0B       		.uleb128 0xb
 1168 0115 49       		.uleb128 0x49
 1169 0116 13       		.uleb128 0x13
 1170 0117 3F       		.uleb128 0x3f
 1171 0118 19       		.uleb128 0x19
 1172 0119 02       		.uleb128 0x2
 1173 011a 18       		.uleb128 0x18
 1174 011b 00       		.byte	0
 1175 011c 00       		.byte	0
 1176 011d 00       		.byte	0
 1177              		.section	.debug_aranges,"",%progbits
 1178 0000 3C000000 		.4byte	0x3c
 1179 0004 0200     		.2byte	0x2
 1180 0006 00000000 		.4byte	.Ldebug_info0
 1181 000a 04       		.byte	0x4
 1182 000b 00       		.byte	0
 1183 000c 0000     		.2byte	0
 1184 000e 0000     		.2byte	0
 1185 0010 00000000 		.4byte	.LFB64
 1186 0014 1C000000 		.4byte	.LFE64-.LFB64
 1187 0018 00000000 		.4byte	.LFB65
 1188 001c 1C000000 		.4byte	.LFE65-.LFB65
 1189 0020 00000000 		.4byte	.LFB66
 1190 0024 D8010000 		.4byte	.LFE66-.LFB66
 1191 0028 00000000 		.4byte	.LFB67
 1192 002c 14000000 		.4byte	.LFE67-.LFB67
 1193 0030 00000000 		.4byte	.LFB68
 1194 0034 D0000000 		.4byte	.LFE68-.LFB68
 1195 0038 00000000 		.4byte	0
 1196 003c 00000000 		.4byte	0
 1197              		.section	.debug_ranges,"",%progbits
 1198              	.Ldebug_ranges0:
 1199 0000 00000000 		.4byte	.LFB64
 1200 0004 1C000000 		.4byte	.LFE64
 1201 0008 00000000 		.4byte	.LFB65
 1202 000c 1C000000 		.4byte	.LFE65
 1203 0010 00000000 		.4byte	.LFB66
 1204 0014 D8010000 		.4byte	.LFE66
 1205 0018 00000000 		.4byte	.LFB67
 1206 001c 14000000 		.4byte	.LFE67
 1207 0020 00000000 		.4byte	.LFB68
 1208 0024 D0000000 		.4byte	.LFE68
 1209 0028 00000000 		.4byte	0
 1210 002c 00000000 		.4byte	0
 1211              		.section	.debug_line,"",%progbits
 1212              	.Ldebug_line0:
 1213 0000 1D020000 		.section	.debug_str,"MS",%progbits,1
 1213      02006201 
 1213      00000201 
 1213      FB0E0D00 
 1213      01010101 
 1214              	.LASF4:
 1215 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1215      6E74385F 
 1215      7400
 1216              	.LASF42:
 1217 000a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 25


 1217      43313120 
 1217      352E342E 
 1217      31203230 
 1217      31363036 
 1218 003d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1218      20726576 
 1218      6973696F 
 1218      6E203233 
 1218      37373135 
 1219 0070 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1219      66756E63 
 1219      74696F6E 
 1219      2D736563 
 1219      74696F6E 
 1220              	.LASF27:
 1221 0098 6D6F746F 		.ascii	"motor_left\000"
 1221      725F6C65 
 1221      667400
 1222              	.LASF23:
 1223 00a3 44524946 		.ascii	"DRIFTED_RIGHT\000"
 1223      5445445F 
 1223      52494748 
 1223      5400
 1224              	.LASF33:
 1225 00b1 696E7465 		.ascii	"integral\000"
 1225      6772616C 
 1225      00
 1226              	.LASF5:
 1227 00ba 5F5F696E 		.ascii	"__int32_t\000"
 1227      7433325F 
 1227      7400
 1228              	.LASF31:
 1229 00c4 646F5F73 		.ascii	"do_straight_with_pid\000"
 1229      74726169 
 1229      6768745F 
 1229      77697468 
 1229      5F706964 
 1230              	.LASF40:
 1231 00d9 6C656674 		.ascii	"left_pwm\000"
 1231      5F70776D 
 1231      00
 1232              	.LASF36:
 1233 00e2 70726576 		.ascii	"previous_movement\000"
 1233      696F7573 
 1233      5F6D6F76 
 1233      656D656E 
 1233      7400
 1234              	.LASF34:
 1235 00f4 70726576 		.ascii	"prev_error\000"
 1235      5F657272 
 1235      6F7200
 1236              	.LASF12:
 1237 00ff 696E7433 		.ascii	"int32_t\000"
 1237      325F7400 
 1238              	.LASF14:
 1239 0107 666C6F61 		.ascii	"float\000"
 1239      7400
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 26


 1240              	.LASF0:
 1241 010d 7369676E 		.ascii	"signed char\000"
 1241      65642063 
 1241      68617200 
 1242              	.LASF1:
 1243 0119 756E7369 		.ascii	"unsigned char\000"
 1243      676E6564 
 1243      20636861 
 1243      7200
 1244              	.LASF30:
 1245 0127 72696768 		.ascii	"right_enc\000"
 1245      745F656E 
 1245      6300
 1246              	.LASF21:
 1247 0131 52494748 		.ascii	"RIGHT_TURN\000"
 1247      545F5455 
 1247      524E00
 1248              	.LASF32:
 1249 013c 6D6F7665 		.ascii	"move_handling\000"
 1249      5F68616E 
 1249      646C696E 
 1249      6700
 1250              	.LASF7:
 1251 014a 6C6F6E67 		.ascii	"long unsigned int\000"
 1251      20756E73 
 1251      69676E65 
 1251      6420696E 
 1251      7400
 1252              	.LASF3:
 1253 015c 73686F72 		.ascii	"short unsigned int\000"
 1253      7420756E 
 1253      7369676E 
 1253      65642069 
 1253      6E7400
 1254              	.LASF20:
 1255 016f 4C454654 		.ascii	"LEFT_TURN\000"
 1255      5F545552 
 1255      4E00
 1256              	.LASF45:
 1257 0179 73746F70 		.ascii	"stop\000"
 1257      00
 1258              	.LASF35:
 1259 017e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1259      52784275 
 1259      66666572 
 1259      00
 1260              	.LASF15:
 1261 018b 646F7562 		.ascii	"double\000"
 1261      6C6500
 1262              	.LASF24:
 1263 0192 53544F50 		.ascii	"STOP\000"
 1263      00
 1264              	.LASF13:
 1265 0197 75696E74 		.ascii	"uint16\000"
 1265      313600
 1266              	.LASF29:
 1267 019e 6C656674 		.ascii	"left_enc\000"
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 27


 1267      5F656E63 
 1267      00
 1268              	.LASF43:
 1269 01a7 4D4F5645 		.ascii	"MOVEMENT.c\000"
 1269      4D454E54 
 1269      2E6300
 1270              	.LASF10:
 1271 01b2 756E7369 		.ascii	"unsigned int\000"
 1271      676E6564 
 1271      20696E74 
 1271      00
 1272              	.LASF9:
 1273 01bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1273      206C6F6E 
 1273      6720756E 
 1273      7369676E 
 1273      65642069 
 1274              	.LASF11:
 1275 01d6 75696E74 		.ascii	"uint8_t\000"
 1275      385F7400 
 1276              	.LASF25:
 1277 01de 57414954 		.ascii	"WAIT\000"
 1277      00
 1278              	.LASF22:
 1279 01e3 44524946 		.ascii	"DRIFTED_LEFT\000"
 1279      5445445F 
 1279      4C454654 
 1279      00
 1280              	.LASF18:
 1281 01f0 73697A65 		.ascii	"sizetype\000"
 1281      74797065 
 1281      00
 1282              	.LASF37:
 1283 01f9 6572726F 		.ascii	"error\000"
 1283      7200
 1284              	.LASF8:
 1285 01ff 6C6F6E67 		.ascii	"long long int\000"
 1285      206C6F6E 
 1285      6720696E 
 1285      7400
 1286              	.LASF16:
 1287 020d 63686172 		.ascii	"char\000"
 1287      00
 1288              	.LASF2:
 1289 0212 73686F72 		.ascii	"short int\000"
 1289      7420696E 
 1289      7400
 1290              	.LASF39:
 1291 021c 6F757470 		.ascii	"output\000"
 1291      757400
 1292              	.LASF28:
 1293 0223 6D6F746F 		.ascii	"motor_right\000"
 1293      725F7269 
 1293      67687400 
 1294              	.LASF44:
 1295 022f 433A5C55 		.ascii	"C:\\Users\\cnai408\\Downloads\\301MotorCar\\psoc fi"
 1295      73657273 
ARM GAS  C:\Users\cnai408\AppData\Local\Temp\ccvhDo2e.s 			page 28


 1295      5C636E61 
 1295      69343038 
 1295      5C446F77 
 1296 025d 726D7761 		.ascii	"rmware\\CS301_Class.cydsn\000"
 1296      72655C43 
 1296      53333031 
 1296      5F436C61 
 1296      73732E63 
 1297              	.LASF19:
 1298 0276 53545241 		.ascii	"STRAIGHT\000"
 1298      49474854 
 1298      00
 1299              	.LASF38:
 1300 027f 64657269 		.ascii	"derivative\000"
 1300      76617469 
 1300      766500
 1301              	.LASF6:
 1302 028a 6C6F6E67 		.ascii	"long int\000"
 1302      20696E74 
 1302      00
 1303              	.LASF17:
 1304 0293 6C6F6E67 		.ascii	"long double\000"
 1304      20646F75 
 1304      626C6500 
 1305              	.LASF26:
 1306 029f 4D6F7665 		.ascii	"MovementState\000"
 1306      6D656E74 
 1306      53746174 
 1306      6500
 1307              	.LASF41:
 1308 02ad 72696768 		.ascii	"right_pwm\000"
 1308      745F7077 
 1308      6D00
 1309              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
